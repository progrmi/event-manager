<script>
  // Alert message handling with clean implementation
  (function() {
    const urlParams = new URLSearchParams(window.location.search);
    const success = urlParams.get("success");
    const error = urlParams.get("error");

    function createAlert(message, type) {
      const alertDiv = document.createElement("div");
      alertDiv.className = `alert alert-${type}`;
      alertDiv.style.padding = "1rem";
      alertDiv.style.margin = "1rem 0";
      alertDiv.style.borderRadius = "4px";
      alertDiv.style.backgroundColor = type === "success" ? "#d4edda" : "#f8d7da";
      alertDiv.style.color = type === "success" ? "#155724" : "#721c24";
      alertDiv.textContent = message;
      return alertDiv;
    }

    const container = document.querySelector(".container");

    if (success && container) {
      let successMessage = "Your action was successful!";
      if (success === "booking_success") {
        successMessage = "Your booking has been successfully created!";
      } else if (success === "event_created") {
        successMessage = "Your event has been successfully created!";
      } else if (success === "event_updated") {
        successMessage = "Your event has been successfully updated!";
      }
      else if (success === "event_deleted") {
        successMessage = "Your event has been successfully deleted!";
      }
      const alertDiv = createAlert(successMessage, "success");
      container.insertBefore(alertDiv, container.firstChild);
    }

    if (error && container) {
      let errorMessage = "An unknown error occurred.";
      if (error === "event_full") {
        errorMessage = "Sorry, this event is now full.";
      } else if (error === "already_booked") {
        errorMessage = "You have already booked this event.";
      } else if (error === "booking_failed") {
        errorMessage = "Your booking could not be completed. Please try again.";
      }
      const alertDiv = createAlert(errorMessage, "error");
      container.insertBefore(alertDiv, container.firstChild);
    }
  })();

  // Theme toggle functionality (global)
  function toggleTheme() {
    try {
      const html = document.documentElement;
      const themeIcon = document.getElementById("theme-icon");
      const isDark = html.getAttribute("data-theme") === "dark";

      if (isDark) {
        html.removeAttribute("data-theme");
        localStorage.setItem("theme", "light");
        if (themeIcon) themeIcon.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill=currentColor viewBox="0 0 256 256"><path d="M233.54,142.23a8,8,0,0,0-8-2,88.08,88.08,0,0,1-109.8-109.8,8,8,0,0,0-10-10,104.84,104.84,0,0,0-52.91,37A104,104,0,0,0,136,224a103.09,103.09,0,0,0,62.52-20.88,104.84,104.84,0,0,0,37-52.91A8,8,0,0,0,233.54,142.23ZM188.9,190.34A88,88,0,0,1,65.66,67.11a89,89,0,0,1,31.4-26A106,106,0,0,0,96,56,104.11,104.11,0,0,0,200,160a106,106,0,0,0,14.92-1.06A89,89,0,0,1,188.9,190.34Z"></path></svg>';
      } else {
        html.setAttribute("data-theme", "dark");
        localStorage.setItem("theme", "dark");
        if (themeIcon) themeIcon.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill=currentColor viewBox="0 0 256 256"><path d="M120,40V32a8,8,0,0,1,16,0v8a8,8,0,0,1-16,0Zm72,88a64,64,0,1,1-64-64A64.07,64.07,0,0,1,192,128Zm-16,0a48,48,0,1,0-48,48A48.05,48.05,0,0,0,176,128ZM58.34,69.66A8,8,0,0,0,69.66,58.34l-8-8A8,8,0,0,0,50.34,61.66Zm0,116.68-8,8a8,8,0,0,0,11.32,11.32l8-8a8,8,0,0,0-11.32-11.32ZM192,72a8,8,0,0,0,5.66-2.34l8-8a8,8,0,0,0-11.32-11.32l-8,8A8,8,0,0,0,192,72Zm5.66,114.34a8,8,0,0,0-11.32,11.32l8,8a8,8,0,0,0,11.32-11.32ZM40,120H32a8,8,0,0,0,0,16h8a8,8,0,0,0,0-16Zm88,88a8,8,0,0,0-8,8v8a8,8,0,0,0,16,0v-8A8,8,0,0,0,128,208Zm96-88h-8a8,8,0,0,0,0,16h8a8,8,0,0,0,0-16Z"></path></svg>';
      }
    } catch (error) {
      console.error("Theme toggle failed:", error);
    }
  }
  // Set initial theme icon and text on load
  document.addEventListener("DOMContentLoaded", function () {
    if (typeof toggleTheme !== "undefined") {
      const savedTheme = localStorage.getItem("theme");
      const themeIcon = document.getElementById("theme-icon");
      if (savedTheme === "dark") {
        if (themeIcon) themeIcon.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill=currentColor viewBox="0 0 256 256"><path d="M120,40V32a8,8,0,0,1,16,0v8a8,8,0,0,1-16,0Zm72,88a64,64,0,1,1-64-64A64.07,64.07,0,0,1,192,128Zm-16,0a48,48,0,1,0-48,48A48.05,48.05,0,0,0,176,128ZM58.34,69.66A8,8,0,0,0,69.66,58.34l-8-8A8,8,0,0,0,50.34,61.66Zm0,116.68-8,8a8,8,0,0,0,11.32,11.32l8-8a8,8,0,0,0-11.32-11.32ZM192,72a8,8,0,0,0,5.66-2.34l8-8a8,8,0,0,0-11.32-11.32l-8,8A8,8,0,0,0,192,72Zm5.66,114.34a8,8,0,0,0-11.32,11.32l8,8a8,8,0,0,0,11.32-11.32ZM40,120H32a8,8,0,0,0,0,16h8a8,8,0,0,0,0-16Zm88,88a8,8,0,0,0-8,8v8a8,8,0,0,0,16,0v-8A8,8,0,0,0,128,208Zm96-88h-8a8,8,0,0,0,0,16h8a8,8,0,0,0,0-16Z"></path></svg>';
      }
    }
  });
  // active link highlighting
  document.addEventListener("DOMContentLoaded", function () {
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll(".nav-link");

    navLinks.forEach((link) => {
      if (link.getAttribute("href") === currentPath) {
        link.classList.add("active");
      } else {
        link.classList.remove("active");
      }
    });
  });

  // Mobile navigation toggle
  document.addEventListener("DOMContentLoaded", function () {
    const navToggle = document.querySelector(".nav-toggle");
    const navMenu = document.querySelector(".nav-menu");

    if (navToggle && navMenu) {
      navToggle.addEventListener("click", function () {
        navMenu.classList.toggle("active");
        navToggle.classList.toggle("active");
      });
    }
  });
</script>
